1OK:) inexisting nodes are not caught properly in the Text portal:   OK
  - e.g.: http://entitylinker.test/text/518105
  ==> VAR BUG:
  1A: inexisting node is not caught properly when relying on the coreID return value:     OK
    -e.g.: http://entitylinker.test/API/place/bf3861df-78ef-4b2e-b0c3-3e639287a7a ((should be: http://entitylinker.test/API/place/bf3861df-78ef-4b2e-b0c3-3e639287a7ae))

2) nodes of the type: Annotation with property private set to True are not matched against cypherstatements!

________________________

3) Texts should receive a UUIDv4Identifier.
  - As a general rule ANY AND ALL nodes need UUIDv4Identifiers!
  - Should receive a default attribute: private set to false!
  - Should receive an optional texid (recommended!)

4) Annotation.inc.php
  - you need to figure a way out to deal with non-existing properties of a node

5) integration with entityview.inc.php:
  - Static code!! what if node does not exist: 
  - .htaccess has the same flaw: what if node does not exist. 
      <-> Fixed by using URI prefix - already implemented. 
      TODO: test /URI/ prefix in other views!!

6) annotatoin.inc.php ==> method:  createAnnotation:
  - Uses static code, what if a property does not exist, rewrite!

7) Python: extractTextFromDB:
  - Assumes static text property for a static node Text;
  - rewrite it so that you extract it from the DB based on the id()-attribute
  - pass the name where the text is stored as an additional property!

8) remove all use cases of entityviews.inc.php:
  - the used architecture is not scalable!
  - currently in: 
    * stable.php
    * identify.php
    * resolve.php